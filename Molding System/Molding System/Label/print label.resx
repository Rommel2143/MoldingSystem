<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="txt_qrsmall.IconLeft" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>